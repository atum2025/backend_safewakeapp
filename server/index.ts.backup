// server/index.ts
import dotenv from "dotenv";
dotenv.config();

import express, { type Request, Response, NextFunction } from "express";
import { registerRoutes } from "./routes";
import { db } from "./db";
import { neon } from "@neondatabase/serverless";

const sql = neon(process.env.DATABASE_URL!); // ← função de consulta, não .execute()

const app = express();
app.use(express.json());
app.use(express.urlencoded({ extended: false }));

app.get("/ping", (_req, res) => {
  res.send("pong 🏓");
});

app.get("/health", async (_req, res) => {
  try {
    await sql`SELECT 1`; // ← CORRETO!
    res.status(200).send("✅ Database connected!");
  } catch (err) {
    console.error("Erro no /health:", err);
    res.status(500).send("❌ Database connection failed");
  }
});

app.use((req, res, next) => {
  const start = Date.now();
  res.on("finish", () => {
    const duration = Date.now() - start;
    if (req.path.startsWith("/api")) {
      console.log(`${req.method} ${req.path} ${res.statusCode} in ${duration}ms`);
    }
  });
  next();
});

registerRoutes(app).catch((err) => {
  console.error("Erro ao registrar rotas:", err);
});

app.use((err: any, _req: Request, res: Response, _next: NextFunction) => {
  const status = err.status || err.statusCode || 500;
  const message = err.message || "Internal Server Error";
  res.status(status).json({ message });
});

app.listen(3000, () => {
  console.log("🚀 Server listening on http://localhost:3000");
});
